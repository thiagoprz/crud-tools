<?php

namespace DummyNamespace;

use Illuminate\Database\Eloquent\Model;
use Thiagoprz\CrudTools\Models\ModelCrud;
use Illuminate\Support\Str;
use Thiagoprz\CrudTools\Interfaces\ModelCrudInterface;
{{useSoftDeletes}}
{{useLogable}}

/**
 * Class DummyClass
 * @package DummyNamespace
 {{properties}}
 */
class DummyClass extends Model implements ModelCrudInterface
{
    use ModelCrud;
    {{softDeletes}}
    {{logable}}

    /**
     * The database table used by the model.
     *
     * @var string
     */
    protected $table = '{{table}}';

    /**
     * The database primary key value.
     *
     * @var string
     */
    protected $primaryKey = {{primaryKey}};

    /**
     * Attributes that should be mass-assignable.
     *
     * @var array
     */
    protected $fillable = [{{fillable}}];

    /**
     * Attributes that are available to the search() method.
     *
     * @see ModelCrud::search()
     * @var array
     */
    static $searchable = [{{searchable}}];

    /**
     * Default search order
     */
    static $search_order = ['id' => 'ASC'];

    /**
     * Model validations
     */
    static $validations = [
        'create' => [],
        //'update' => [],
    ];

    /**
     * Forbade access to deleted records using "with_trashed" param on request?
     */
    static $withTrashedForbidden = false;

    /**
     * Forbade access to show only deleted records using "only_trashed" param on request?
     */
    static $onlyTrashedForbidden = false;

    /**
     * Forbade access to return a non paginated result through search method using "no_pagination" param on request?
     */
    static $noPaginationForbidden = false;

    /**
     * Number of records to display per page
     */
    static $paginationForSearch = 10;
}
